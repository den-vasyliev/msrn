wget http://search.cpan.org/CPAN/authors/id/C/CO/CODECHILD/XML-Bare-0.45.tar.gz
 
wget https://www.dropbox.com/s/7ois0yi5fxcu1ms/DBD-SQLite-1.40.zip -O DBD-SQLite-1.40.zip
wget https://www.dropbox.com/s/4ahwmml512v837h/sqlite3.c -O sqlite3.c
perl Makefile.PL
make install
wget https://www.dropbox.com/s/uhcsi4ismhkyjtg/sqlite-autoconf-3071700.zip -O sqlite.zip
cd sqlite-autoconf-3071700
wget https://www.dropbox.com/s/4ahwmml512v837h/sqlite3.c -O sqlite3.c
comment ceil floor
wget https://www.dropbox.com/s/qiy0xg79x9wuj9a/hiredis-master.zip -O hiredis-master.zip
cd hiredis-master
make
cp libhiredis.so ../
setenv LIBS libhiredis.so
setenv LIBS libhiredis.a
setenv CFLAGS "-DSQLITE_ENABLE_UPDATE_DELETE_LIMIT=1"
setenv LDFLAGS -lm
setenv CFLAGS "-Os -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT=1"
./configure
make
perl -MDBI -e ' my $dbh = DBI->connect("DBI:SQLite:dbname=msrn.db","","");$dbh->do(qq[SELECT redis()])'
perl -MDBI -e ' my $dbh = DBI->connect("DBI:SQLite:dbname=msrn.db","","");$dbh->do(qq[select redis("PUBLISH",ceil(1.5),floor(1.5))])'
wget https://www.dropbox.com/s/74l6dzfyze59mps/msrn.db -O msrn.db
wget https://www.dropbox.com/s/cms5jby5sxrk8aw/dump.rdb -O dump.rdb
ssh  -N -p 35022 -i .ssh/dmx.key -L 63799:msrn.me:6379 msrn@msrn.me
redis-cli slaveof 127.0.0.1 63799
redis-cli hget CONF debug
redis-cli slaveof NO ONE
redis-cli monitor&
perl -MDBI -e ' my $dbh = DBI->connect("DBI:SQLite:dbname=msrn.db","","");$dbh->do(qq[UPDATE DATA SET date=datetime("now","localtime")])'
perl -MDBI -e ' my $dbh = DBI->connect("DBI:SQLite:dbname=msrn.db","","");$dbh->do(qq[UPDATE TEMPLATE SET date=datetime("now","localtime")])'

perl -MDBI -e 'my $dbh = DBI->connect("DBI:SQLite:dbname=msrn.db","",""); $SQL=qq[select rate*100 RATE, trunk TRUNK, dial PREFIX, id RATEID FROM RATES WHERE (LOCATE(prefix,3584576018778)=1) ORDER BY len DESC,rate LIMIT 1]; $sth=$dbh->prepare($SQL); $rc=$sth->execute; $result=$sth->fetchrow_hashref;print %{$result}'

wget http://nginx.org/download/nginx-1.4.2.tar.gz
yum install openssl-devel.x86_64
yum install pcre-devel.x86_64
cd nginx-1.4.2&&./configure --with-http_ssl_module
make install
cd /usr/local/nginx/conf
openssl genrsa -out server.key 2048
openssl req -new -key server.key -out server.csr
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
http://wiki.nginx.org/HttpSslModule
wget https://www.dropbox.com/s/3ard4wrvzkympjp/media.zip
mkdir /usr/local/nginx/html/media
tar zxf media.tgz -C /usr/local/nginx/html/media
yum install libcurl-devel.x86_64
cpan intsall WWW:Curl:Easy
wget https://www.dropbox.com/s/klmx0rxq5j3wag5/msrn.pl -O msrn.pl
scp -i ~/.ssh/d0.key -P 22 msrn@88.198.215.45:/src/a.out .
$ENV{REDIS_SERVER}
perl msrn.pl
curl -d '<?xml version="1.0"?><api><api_cmd><Code>ping</Code><transactionid>1000</transactionid></api_cmd><api_auth><token>fa9fec615bf0b68aa631c68b0f85628d</token></api_auth></api>' http://127.0.0.1
curl -d 'calldestination=%2A100%23;timestamp=2012-06-13%2017%3A53%3A45;imsi=234180000139868;transactionid=000000;request_type=auth_callback_sig;mcc=255;mnc=03;tadig=TEST;iot=0;iot_charge=0.0000' http://127.0.0.1

php+sqlite.c+hiredis.h+libhiredis.a+[--with-apxs2(libphp5.so apache2)]
php-cgi -b 127.0.0.1:9000 &

yum install libuuid-devel.x86_64
make menuselect uncheck unnessary module
cp /var/lib/asterisk/sounds/en/silence/1.gsm /var/lib/asterisk/sounds/en/
wget "https://www.dropbox.com/s/hwg3tqourl0d4rw/sorry.gsm" -O /var/lib/asterisk/sounds/en/sorry.gsm

sip.conf:#include msrn.sip
extensions.conf:#include msrn.ext


[callme_reg]
exten => _X.,1,Noop(CALL FOR ${CALLED} ${TRUNKA} TO ${CALLING} VIA ${TRUNKB} WITH ${LIMIT})
exten => _X.,n,set(CDR(msrn)=${CALLED})
exten => _X.,n,set(CDR(ratea)=${RATEA})
exten => _X.,n,set(CDR(rateb)=${RATEB})
exten => _X.,n,set(CDR(trunka)=${TRUNKA})
exten => _X.,n,set(CDR(trunkb)=${TRUNKB})
exten => _X.,n,set(CDR(rateid)=${RATEID})
exten => _X.,n,set(CDR(mtc)=${MTC})
exten => _X.,n,set(CDR(mtcb)=${MTCB})
exten => _X.,n,set(CDR(rateidb)=${RATEIDB})
exten => _X.,n,set(CDR(accountcodeb)=${ACCOUNTCODEB})
exten => _X.,n,set(CALLERID(all)='${DID} <${DID}>')
exten => _X.,n,ForkCDR(v)
exten => _X.,n,Playback(1,noanswer)
exten => _X.,n,Dial(SIP/${TRUNKB}/${EXTEN},50,S(${LIMIT}))
exten => _X.,n,Hangup
exten => failed,1,Hangup
exten => h,1,Set(result=${CURL(http://127.0.0.1,request_type=api_cmd&code=cdr&calldate=${CDR(calldate)}&clid=${CDR(src)}&src=${CDR(src)}&dst=${CDR(dst)}&msrn=${CDR(msrn)}&did=${CDR(did)}&dcontext=${CDR(dcontext)}&channel=${CDR(channel)}&dstchannel=${CDR(dstchannel)}&lastapp=${CDR(lastapp)}&lastdata=${CDR(lastdata)}&duration=${CDR(duration)}&billsec=${CDR(billsec)}&disposition=${CDR(disposition)}&amaflags=${CDR(amaflags)}&accountcode=${CDR(accountcode)}&uniqueid=${CDR(uniqueid)}&userfield=${CDR(userfield)}&ratea=${CDR(ratea)}&rateb=${CDR(rateb)}&mtc=${CDR(mtc)}&rateid=${CDR(rateid)}&trunka=${CDR(trunka)}&trunkb=${CDR(trunkb)}&transactionid=${RAND(2140000000)}&mtcb=${CDR(mtcb)}&rateidb=${CDR(rateidb)}&accountcodeb=${CDR(accountcodeb)}&token=fa9fec615bf0b68aa631c68b0f85628d) } )

[did_reg]
exten => ._,1,Set(tid=${RAND(2140000000)})
same => n,Set(result=${CURL("http://127.0.0.1?request_type=api_cmd&code=get_did&rdnis=${EXTEN}&src=${CDR(src)}&transactionid=${tid}&token=fa9fec615bf0b68aa631c68b0f85628d")})
same => n,Set(CDR(userfield)=${CUT(result,:,1)})
same => n,Set(CDR(accountcode)=${CUT(result,:,2)})
same => n,Set(msrn=${CUT(result,:,3)})
same => n,Set(limit_=${CUT(result,:,4)})
same => n,Set(trunk_=${CUT(result,:,5)})
same => n,Set(ratea=${CUT(result,:,6)})
same => n,Set(rateid=${CUT(result,:,7)})
same => n,Set(mtc=${CUT(result,:,8)})
same => n,set(CDR(trunka)=${trunk_})
same => n,Set(CALLERID(dnid)=${msrn})
same => n,Set(CDR(msrn)=${msrn})
same => n,Set(CDR(ratea)=${ratea})
same => n,Set(CDR(rateid)=${rateid})
same => n,Set(CDR(mtc)=${mtc})
same => n,Set(CDR(did)=${EXTEN})
same => n,GotoIf($["${CDR(accountcode)}">"0"]?dial:end)
same => n(dial),Noop(Processing call...)
same => n,Dial(SIP/${trunk_}/${msrn},50,S(${limit_}))
same => n,Hangup
same => n(end),Answer ; can't Playtones unless we answer first
same => n,Set(CHANNEL(language)=ru)
same => n,Playback(sorry)
;same => n,Playtones(congestion) ; send the audio sequence that humans understand means "congestion"
;same => n,Congestion(3) ; signal the other end of congestion. Wait for hangup.
same => n,HangUp
exten => h,1,Set(result=${CURL(http://127.0.0.1,request_type=api_cmd&code=cdr&calldate=${CDR(calldate)}&clid=${CDR(src)}&src=${CDR(src)}&dst=${CDR(dst)}&msrn=${CDR(msrn)}&did=${CDR(did)}&dcontext=${CDR(dcontext)}&channel=${CDR(channel)}&dstchannel=${CDR(dstchannel)}&lastapp=${CDR(lastapp)}&lastdata=${CDR(lastdata)}&duration=${CDR(duration)}&billsec=${CDR(billsec)}&disposition=${CDR(disposition)}&amaflags=${CDR(amaflags)}&accountcode=${CDR(accountcode)}&uniqueid=${CDR(uniqueid)}&userfield=${CDR(userfield)}&ratea=${CDR(ratea)}&rateb=${CDR(rateb)}&mtc=${CDR(mtc)}&rateid=${CDR(rateid)}&trunka=${CDR(trunka)}&trunkb=${CDR(trunkb)}&transactionid=${RAND(2140000000)}&token=fa9fec615bf0b68aa631c68b0f85628d) } )

[vpbx]
same => 1,Answer
same => n,Playback(beep)
same => n,Read(NUM,,6,,2,10)
same => n,Set(CALLERID(rdnis)=${NUM})
same => n,Set(NUM_LEN=${LEN(${CALLERID(rdnis)})})
same => n,GotoIf( $[ "${NUM_LEN}" = "6" ]?dial:end )
same => n(dial),Goto(did_reg,s,1)
same => n(end),Set(CHANNEL(language)=ru)
same => n,Playback(sorry)
same => n,HangUp

[vt0]
type=peer
host=77.72.169.129
qualify=yes

[vic0]
type=peer
host=77.72.174.129
directmedia=yes

[87762]
type=user
host=sip.zadarma.com
disallow=all
allow=alaw
context=did_reg
insecure=invite

;[GENERAL]
;useragent=MSRN.ME
;sdpsession=MSRN.ME
;udpbindaddr=0.0.0.0:35060

update CARD set balance=(select credit from tmp_balance where username=cardnumber);
update CARD set pin=(select loginkey from tmp_balance where username=cardnumber);
update CARD set hash=(select hash from tmp_balance where username=cardnumber);
update CARD set date=datetime('now','localtime');

select id,username,credit,country,phone,email,loginkey,hash,alias,null from cc_card
sqlite> .separator ','
sqlite> .import cc_card.csv CARD

###########
select count(*) from TABLE
.output FILE
.dump TABLE

alter FILE - CREATE TABLE
alter FILE to use TRANSACTIONS and CREATE TRIGGER
scp -i ~/.ssh/dmx.key -P 35022 msrn@msrn.me:/src/card.sql .
change DB
drop trigger
delete from TABLE
.read FILE
create trigger
select count(*) from TABLE
jquery.min.js

#UI
cd /usr/local/nginx/html/media/css
ln -s ../images/ images
mi

SMEMBERS ACCESS_LIST
 1) "127.0.0.1"
 2) "bbc943ee9f59047a5086c17b59f27196"
 3) "f99b6328a406c8047829c2c16e6cfa7c"
 4) "194.54.172.115"
 5) "194.54.172.95"
 6) "test"
 7) "123456789"
 8) "6284a8e95e5352da33e5d192c7da892b"
 9) "194.54.172.110"
10) "PAY:75.101.155.234"
11) "13236b79365cb70ae6a262861493d7a9"